name: Code Quality

on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened

jobs:
  quality:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Load cached Poetry installation
        id: cached-poetry
        uses: actions/cache@v3
        with:
          path: ~/.local
          key: poetry-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}

      - name: Load cached Poetry venv
        id: cached-poetry-venv
        uses: actions/cache@v3
        with:
          path: ~/.venv
          key: poetry-venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install Poetry
        if: steps.cached-poetry.outputs.cache-hit != 'true'
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Install dependencies
        run: |
          poetry install

      - name: Run black
        run: |
          poetry run black --check europa_1400_tools tests --diff

      - name: Run isort
        run: |
          poetry run isort --check-only --diff europa_1400_tools tests

      - name: Run mypy
        run: |
          poetry run mypy europa_1400_tools tests

      - name: Run bandit
        run: |
          poetry run bandit -r europa_1400_tools -c pyproject.toml

      - name: Run pytest
        run: |
          poetry run pytest --cov=europa_1400_tools --cov-report=xml
